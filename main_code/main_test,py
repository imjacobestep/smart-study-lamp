from ctypes import util
import camera_service
import environment_service
import utilities
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)
GPIO.setup(utilities.pin_table["auto switch"], GPIO.IN, pull_up_down=GPIO.PUD_UP) #auto switch
GPIO.setup(utilities.pin_table["led brightness"], GPIO.IN, pull_up_down=GPIO.PUD_UP) #LED brightness button
GPIO.setup(utilities.pin_table["led color"], GPIO.IN, pull_up_down=GPIO.PUD_UP) #LED color button
GPIO.setup(utilities.pin_table["camera switch"], GPIO.IN, pull_up_down=GPIO.PUD_UP) #camera switch

def test_learning_env():
    environment_service.play_sound(0)
    environment_service.set_color([0, 0, 255]) #create learning environment

    environment_service.speak_definition("test")

    environment_service.play_sound(1)
    environment_service.set_color(environment_service.current_color) #exit learning environment
    utilities.wait(5)

def test_adjustment():
    for i in range(10):
        environment_service.cycle_brightness
        utilities.wait(2)
    for i in range(3):
        environment_service.cycle_colors
        utilities.wait(2)

def test_tracking():
    print("placeholder")

while True:
    userIn = input("what do you want to test?")
    if userIn == "adjustment":
        test_adjustment()
    if userIn == "environment":
        test_learning_env()